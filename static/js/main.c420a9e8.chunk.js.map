{"version":3,"sources":["index.js"],"names":["Square","props","className","onClick","value","Board","i","this","squares","renderSquare","React","Component","Game","state","history","Array","fill","xIsNext","stepNumber","status","current","winner","calculateWinner","moves","map","step","move","desc","jumpTo","handleClick","setState","slice","concat","length","lines","a","b","c","ReactDOM","render","document","getElementById"],"mappings":"kOAIA,SAASA,EAAOC,GACZ,OACE,wBAAQC,UAAU,SAASC,QAAUF,EAAME,QAA3C,SACGF,EAAMG,Q,IAKTC,E,kKACJ,SAAaC,GAAI,IAAD,OACd,OAAO,cAACN,EAAD,CAAQI,MAAOG,KAAKN,MAAMO,QAAQF,GAChCH,QAAW,kBAAM,EAAKF,MAAME,QAAQG,Q,oBAG/C,WACC,OACG,gCACE,sBAAKJ,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,MAErB,sBAAKP,UAAU,YAAf,UACGK,KAAKE,aAAa,GAClBF,KAAKE,aAAa,GAClBF,KAAKE,aAAa,a,GAtBTC,IAAMC,WA6BpBC,E,kDACJ,WAAYX,GACX,IAAD,8BACE,cAAMA,IACDY,MACL,CACEC,QAAS,CAAC,CAACN,QAASO,MAAM,GAAGC,KAAK,QAClCC,SAAQ,EACRC,WAAW,GANf,E,0CASA,WACC,IAgBKC,EAhBN,OACQL,EAAUP,KAAKM,MAAMC,QACrBM,EAAUN,EAAQP,KAAKM,MAAMK,YAC7BG,EAASC,EAAgBF,EAAQZ,SAEjCe,EAAQT,EAAQU,KAAI,SAACC,EAAMC,GAE/B,IAAMC,EAAOD,EACP,eAAiBA,EACjB,mBACN,OACE,6BACE,wBAAQvB,QAAU,kBAAI,EAAKyB,OAAOF,IAAlC,SAA0CC,KADlCD,MAYd,OALEP,EADEE,EACO,WAAaA,EAEb,iBAAmBd,KAAKM,MAAMI,QAAU,IAAM,KAIvD,sBAAKf,UAAU,OAAf,UACE,qBAAKA,UAAU,aAAf,SACE,cAACG,EAAD,CACEG,QAASY,EAAQZ,QACjBL,QAAS,SAACG,GAAD,OAAM,EAAKuB,YAAYvB,QAEpC,sBAAKJ,UAAU,YAAf,UACE,8BAAMiB,IACN,6BAAKI,Y,oBAMb,SAAOE,GAEHlB,KAAKuB,SACL,CACEZ,WAAWO,EACXR,QAASQ,EAAO,IAAO,M,yBAK7B,SAAYnB,GAEV,IAAMQ,EAAUP,KAAKM,MAAMC,QAAQiB,MAAM,EAAExB,KAAKM,MAAMK,WAAa,GAE7DV,EADUM,EAAQP,KAAKM,MAAMK,YACXV,QAAQuB,QAC7BT,EAAgBd,IAAYA,EAAQF,KAIvCE,EAAQF,GAAKC,KAAKM,MAAMI,QAAQ,IAAI,IACpCV,KAAKuB,SAAS,CAAChB,QAAQA,EAAQkB,OAAO,CAAC,CAACxB,QAASA,KAClCS,SAASV,KAAKM,MAAMI,QACrBC,WAAWJ,EAAQmB,c,GAxElBvB,IAAMC,WAkFzB,SAASW,EAAgBd,GAWvB,IAVA,IAAM0B,EAAQ,CACZ,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,GACP,CAAC,EAAG,EAAG,IAEA5B,EAAI,EAAGA,EAAI4B,EAAMD,OAAQ3B,IAAK,CACrC,kBAAkB4B,EAAM5B,GAAxB,GAAO6B,EAAP,KAAUC,EAAV,KAAaC,EAAb,KACA,GAAI7B,EAAQ2B,IAAM3B,EAAQ2B,KAAO3B,EAAQ4B,IAAM5B,EAAQ2B,KAAO3B,EAAQ6B,GACpE,OAAO7B,EAAQ2B,GAGnB,OAAO,KArBTG,IAASC,OACP,cAAC3B,EAAD,IACA4B,SAASC,eAAe,W","file":"static/js/main.c420a9e8.chunk.js","sourcesContent":["import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\n\r\nfunction Square(props) {\r\n    return (\r\n      <button className=\"square\" onClick ={props.onClick}>\r\n        {props.value}\r\n      </button>\r\n    );\r\n  }\r\n\r\nclass Board extends React.Component {\r\n  renderSquare(i) {\r\n    return <Square value={this.props.squares[i]}\r\n             onClick = {() => this.props.onClick(i)}/>;\r\n  }\r\n\r\n  render() {\r\n   return (\r\n      <div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(0)}\r\n          {this.renderSquare(1)}\r\n          {this.renderSquare(2)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(3)}\r\n          {this.renderSquare(4)}\r\n          {this.renderSquare(5)}\r\n        </div>\r\n        <div className=\"board-row\">\r\n          {this.renderSquare(6)}\r\n          {this.renderSquare(7)}\r\n          {this.renderSquare(8)}\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nclass Game extends React.Component {\r\n  constructor(props)\r\n  {\r\n    super(props)\r\n    this.state = \r\n    {\r\n      history: [{squares: Array(9).fill(null)}],\r\n      xIsNext:true,\r\n      stepNumber:0,\r\n    }\r\n  }\r\n  render() \r\n  {\r\n    const history = this.state.history;\r\n    const current = history[this.state.stepNumber];    \r\n    const winner = calculateWinner(current.squares);\r\n    \r\n    const moves = history.map((step, move) => \r\n    {\r\n      const desc = move ?\r\n            'Go to move #' + move :\r\n            'Go to game start';\r\n      return(\r\n        <li key ={move}>\r\n          <button onClick ={()=>this.jumpTo(move)}>{desc}</button>\r\n        </li>\r\n      );\r\n    });\r\n    let status;\r\n    if (winner) {\r\n      status = 'Winner: ' + winner;\r\n    } else {\r\n      status = 'Next player: ' + (this.state.xIsNext ? 'X' : 'O');\r\n    }\r\n    \r\n    return (\r\n      <div className=\"game\">\r\n        <div className=\"game-board\">\r\n          <Board \r\n            squares={current.squares}\r\n            onClick={(i)=> this.handleClick(i)}/>\r\n        </div>\r\n        <div className=\"game-info\">\r\n          <div>{status}</div>\r\n          <ol>{moves}</ol>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n  \r\n  jumpTo(step)\r\n  {\r\n      this.setState(\r\n      {\r\n        stepNumber:step,\r\n        xIsNext:(step % 2) === 0,\r\n      });\r\n      \r\n   \r\n  }\r\n  handleClick(i)\r\n  {\r\n    const history = this.state.history.slice(0,this.state.stepNumber + 1);\r\n    const current = history[this.state.stepNumber];   \r\n    const squares = current.squares.slice();\r\n    if(calculateWinner(squares) || squares[i])\r\n    {\r\n        return;\r\n    }\r\n    squares[i] = this.state.xIsNext?'X':\"O\";\r\n    this.setState({history:history.concat([{squares: squares,}]),\r\n                   xIsNext:!this.state.xIsNext,\r\n                  stepNumber:history.length});\r\n  }\r\n}\r\n\r\n// ========================================\r\n\r\nReactDOM.render(\r\n  <Game />,\r\n  document.getElementById('root')\r\n);\r\nfunction calculateWinner(squares) {\r\n  const lines = [\r\n    [0, 1, 2],\r\n    [3, 4, 5],\r\n    [6, 7, 8],\r\n    [0, 3, 6],\r\n    [1, 4, 7],\r\n    [2, 5, 8],\r\n    [0, 4, 8],\r\n    [2, 4, 6],\r\n  ];\r\n  for (let i = 0; i < lines.length; i++) {\r\n    const [a, b, c] = lines[i];\r\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\r\n      return squares[a];\r\n    }\r\n  }\r\n  return null;\r\n}"],"sourceRoot":""}